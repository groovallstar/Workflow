--- # start

RandomForest:
  hyper_parameter: {
    'clf__n_estimators': 1000,
    'clf__max_depth': 10,
    'clf__max_features': 'sqrt',
  }
  bayesian_parameter: {
     'clf__n_estimators': !!python/tuple [1000, 2000],
  }
  grid_search_parameter: {
    'clf__n_estimators': [1000, 1500, 2000],
  }

LightGBM:
  hyper_parameter: {
    'clf__class_weight': 'balanced',
    'clf__n_estimators': 1000,
    'clf__learning_rate': 0.01,
    'clf__max_depth': 10,
    'clf__objective': 'binary',
    'clf__metric': 'binary_logloss',
  }
  bayesian_parameter: {
     'clf__n_estimators': !!python/tuple [1000, 2000],
  }
  grid_search_parameter: {
    'clf__n_estimators': [1000, 1500, 2000],
  }

XGBoost:
  hyper_parameter: {
    'clf__n_estimators': 1000,
    'clf__learning_rate': 0.01,
    'clf__objective': 'binary:logistic',
    'clf__verbosity': 0,
  }
  bayesian_parameter: {
    'clf__n_estimators': !!python/tuple [1000, 2000],
  }
  grid_search_parameter: {
    'clf__n_estimators': [1000, 1500, 2000],
  }

CatBoost:
  hyper_parameter: {
    'clf__iterations': 1000,
    'clf__learning_rate': 0.01,
    'clf__depth': 10,
    'clf__thread_count': -1,
    'clf__loss_function': 'Logloss',
    'clf__verbose': False,
  }
  bayesian_parameter: {
    'clf__iterations': !!python/tuple [1000, 1500, 2000],
  }
  grid_search_parameter: {
    'clf__iterations': [1000, 1500, 2000],
  }

... # end
